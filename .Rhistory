)
val
})
intermediate_variable * 2
}
my(25)
library(readr)
library(tidyverse)
library(openxlsx)
library(here)
library(tidyxl)
library(tidyr)
library(dplyr)
library(glue)
library(epoxy)
library(rprojroot)
library(purrr)
tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
y <- function(x) {
tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
}
my(25)
my <- function(x) {
tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
}
my(25)
my <- function(x) {
intermediate_variable <- tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
my <- function(x) {
intermediate_variable <- tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
intermediate_variable * 2
}
my(25)
my(25)
my <- function(x) {
intermediate_variable <- tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
intermediate_variable * 2
}
my(25)
my <- function(x) {
tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
}
my(25)
tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
View(my)
View(my)
tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
library(readr)
library(tidyverse)
library(openxlsx)
library(here)
library(tidyxl)
library(tidyr)
library(dplyr)
library(glue)
library(epoxy)
library(rprojroot)
library(purrr)
tryCatch({
my_variable
}, error = function(e) {
val <- 5
message(
glue::glue('Hello. An error occured: {e$message}')
)
message(
glue::glue('Fallback plan executed: {val} is returned')
)
val
})
my <- function(x) {
intermediate_variable <- tryCatch({
my_variable
}, error = function(e) {
val <- 5
cli::cli_alert_info(
'Hello. An error occured: {.strong {e$message}}'
)
cli::cli_alert_success(
'Fallback plan executed: {.var intermediate_variable} now uses {.val {val}}'
)
val
})
intermediate_variable * 2
}
my(354)
my_ggplot <- function(df, x, y) {
df |>
ggplot(aes(x, y)) +
geom_point()
}
palmerpenguins::penguins |>
my_ggplot(x = flipper_length_mm, y = bill_length_mm)
my_ggplot <- function(df, ...) {
df |>
ggplot(aes(...)) + ## the aes(...) control is problematic...
geom_point()
}
palmerpenguins::penguins |>
my_ggplot(x = flipper_length_mm, y = bill_length_mm)
my_ggplot <- function(df, x, y) {
df |>
ggplot(aes({{x}}, {{y}})) +
geom_point() +
theme_minimal(base_size = 25)
}
palmerpenguins::penguins |>
my_ggplot(x = flipper_length_mm, y = bill_length_mm)
palmerpenguins::penguins |>
my_ggplot(x = body_mass_g, y = bill_length_mm)
View(.Last.value)
View(my)
calc_ratio <- function(df, num, denom) {
df |>
mutate(
ratio = {{num}} / {{denom}}
)
}
palmerpenguins::penguins |>
calc_ratio(
num = flipper_length_mm, denom = bill_length_mm
) |>
select(ratio)
View(.Last.value)
calc_ratio_w_name <- function(df, num, denom) {
name <- glue::glue(
'ratio_{ensym(num)}_{ensym(denom)}'
##ensym() comes from the rlang package in R (part of the tidyverse ecosystem). Itâ€™s used in tidy      ##evaluation to capture an argument as a symbol (not evaluated immediately).
)
df |>
mutate(
{{name}} := {{num}} / {{denom}} ## uses := to asign the names to the operation
)
}
palmerpenguins::penguins |>
calc_ratio_w_name(
num = flipper_length_mm, denom = bill_length_mm
)
View(.Last.value)
palmerpenguins::penguins |>
calc_ratio_w_name(
num = flipper_length_mm, denom = bill_length_mm
) |>
calc_ratio_w_name(
num = body_mass_g, denom = bill_length_mm
) |>
select(matches('ratio'))
View(.Last.value)
library(readr)
library(tidyverse)
library(openxlsx)
library(here)
library(tidyxl)
library(tidyr)
library(dplyr)
library(glue)
library(epoxy)
library(rprojroot)
library(purrr)
call_NWS <- function(coordinates = '38.8894,-77.0352') {
NWS_base_url <- 'https://api.weather.gov'
httr2::request(NWS_base_url)  |>
httr2::req_url_path_append(
'points',
coordinates
) |>
httr2::req_perform() |>
httr2::resp_body_json()
}
View(.Last.value)
View(call_NWS)
View(call_NWS)
get_NWS_forecast <- function(forecast_url) {
httr2::request(forecast_url)  |>
httr2::req_perform() |>
httr2::resp_body_json()
}
View(get_NWS_forecast)
forecast_url <- call_NWS() |>
pluck('properties', 'forecastHourly')
get_NWS_forecast(forecast_url) |>
pluck('properties', 'periods', 1) |>
glimpse()
get_NWS_forecast(forecast_url) |>
pluck('properties', 'periods') |>
bind_rows() |>
select(
time = startTime,
temp_f = temperature,
rain_prob = probabilityOfPrecipitation,
forecast = shortForecast
) |>
filter(
map_lgl(rain_prob, is.numeric)
) |>
mutate(
rain_prob = map_dbl(rain_prob, 1),
time = ymd_hms(time)
)
get_NWS_forecast(forecast_url) |>
pluck('properties', 'periods') |>
map_dfr(
\(list_of_16) {
tibble(
time = list_of_16 |> pluck('startTime'),
temp_F = list_of_16 |> pluck('temperature'),
rain_prob = list_of_16 |>
pluck('probabilityOfPrecipitation', 'value'),
forecast = list_of_16 |> pluck('shortForecast')
)
}
) |>
mutate(time = ymd_hms(time))
get_weather_forecast <- function(coordinates = '38.8894,-77.0352') {
forecast_url <- call_NWS(coordinates) |>
pluck('properties', 'forecastHourly')
get_NWS_forecast(forecast_url) |>
pluck('properties', 'periods') |>
map_dfr(
\(list_of_16) {
tibble(
time = list_of_16 |> pluck('startTime'),
temp_F = list_of_16 |> pluck('temperature'),
rain_prob = list_of_16 |>
pluck('probabilityOfPrecipitation', 'value'),
forecast = list_of_16 |> pluck('shortForecast')
)
}
) |>
mutate(time = ymd_hms(time))
}
get_weather_forecast()
get_weather_forecast('sgsdfsd')
call_NWS_with_backoff <- insistently(call_NWS)
tryCatch({
call_NWS_with_backoff('sgsdfsd') |>
pluck('properties', 'forecastHourly')
}, error = function(e) {
cli::cli_abort(
"Operation failed with this error message: {.val {e$message}}.
This likely happened because the {.arg coordinates} argument isn't valid."
)
})
get_weather_forecast_with_backoff <- function(
coordinates = '38.8894,-77.0352'
) {
forecast_url <- tryCatch({
call_NWS_with_backoff(coordinates) |>
pluck('properties', 'forecastHourly')
}, error = function(e) {
cli::cli_abort(
"Operation failed with this error message: {.val {e$message}}.
This likely happened because the {.arg coordinates} argument isn't valid."
)
})
get_NWS_forecast(forecast_url) |>
pluck('properties', 'periods') |>
map_dfr(
\(list_of_16) {
tibble(
time = list_of_16 |> pluck('startTime'),
temp_F = list_of_16 |> pluck('temperature'),
rain_prob = list_of_16 |>
pluck('probabilityOfPrecipitation', 'value'),
forecast = list_of_16 |> pluck('shortForecast')
)
}
) |>
mutate(time = ymd_hms(time))
}
get_weather_forecast_with_backoff('adfsdf')
get_weather_forecast_with_backoff()
## management of periods and time operations
days(10) + hours(1)
tib <- tibble(
periods = c(
days(10),
hours(2),
days(3),
hours(6)
)
)
sum(tib$periods)
reduce(tib$periods, `+`)
tmp <- days(0)
for (current_period in tib$periods) {
tmp <- tmp + current_period
}
tmp
tmp <- days(0)
for (current_period in list(days(10), hours(2))) {
tmp <- tmp + current_period
}
tmp
tmp <- days(0)
for (current_period in map(tib$periods, as.period)) {
tmp <- tmp + current_period
}
tmp
setwd("~/Personal_RM/Libro/introduccion_cap1")
setwd("~/Personal_RM/Libro/capitulo_2")
system("quarto pandoc capitulo_2.docx -t markdown -o capitulo_2.qmd")
setwd("~/Personal_RM/Libro/capitulo_3")
system("quarto pandoc capitulo_3.docx -t markdown -o capitulo_3.qmd")
setwd("~/Personal_RM/Libro/capitulo_4")
system("quarto pandoc capitulo_4.docx -t markdown -o capitulo_4.qmd")
setwd("~/Personal_RM/Libro/capitulo_5")
system("quarto pandoc capitulo_5.docx -t markdown -o capitulo_5.qmd")
setwd("~/Personal_RM/Libro/capitulo_6")
system("quarto pandoc capitulo_6.docx -t markdown -o capitulo_6.qmd")
setwd("~/Personal_RM/Libro/capitulo_7_epilogo")
system("quarto pandoc capitulo_7.docx -t markdown -o capitulo_7.qmd")
setwd("~/Personal_RM/Libro")
quarto render
quarto render
setwd("~/Personal_RM/Libro")
quarto::quarto_path()
install.packages("quarto")
quarto::quarto_path()
getwd()
quarto::quarto_render()
setwd("~/Personal_RM/Libro")
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
setwd("~/Personal_RM/Libro")
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
## word to quarto
"LIC" %in% installed.packages()
rmarkdown::find_pandoc()
setwd("~/Personal_RM/Libro/word_quarto")
system("quarto pandoc capitulo 1.docx -t markdown -o capitulo 1.qmd")
install.packages("quarto")
quarto::quarto_render()
## word to quarto
"LIC" %in% installed.packages()
### quarto render
quarto::quarto_path()
getwd()
rmarkdown::find_pandoc()
system("quarto pandoc capitulo 1.docx -t markdown -o capitulo 1.qmd")
setwd("~/Personal_RM/Libro/word_quarto")
system("quarto pandoc capitulo_1.docx -t markdown -o capitulo_1.qmd")
system("quarto pandoc capitulo_1.docx -t markdown -o capitulo_1.qmd")
system("quarto pandoc capitulo_1.docx -t markdown -o capitulo_1.qmd")
system("quarto pandoc introduccion.docx -t markdown -o introduccion.qmd")
quarto::quarto_render()
setwd("~/Personal_RM/Libro")
quarto::quarto_render()
quarto::quarto_render()
setwd("~/Personal_RM/Libro")
quarto::quarto_render()
setwd("~/Personal_RM/Libro/_book")
quarto::quarto_render()
setwd("~/Personal_RM/Libro")
quarto::quarto_render()
setwd("~/Escritorio/Libro")
system("quarto pandoc capitulo_1.docx -t markdown -o capitulo_1.qmd")
setwd("~/Personal_RM/Libro")
quarto::quarto_render()
setwd("~/Personal_RM/Libro")
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
setwd("~/Personal_RM/Libro")
quarto::quarto_render()
quarto::quarto_render()
quarto preview
quarto preview
setwd("~/Personal_RM/Libro/_book")
